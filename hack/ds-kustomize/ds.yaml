# Sample DirectoryService deployment
apiVersion: directory.forgerock.io/v1alpha1
kind: DirectoryService
metadata:
  name: ds-idrepo
  labels:
    app.kubernetes.io/name: ds
    app.kubernetes.io/part-of: forgerock
spec:
 # The number of DS servers in the topology
  replicas: 1

  # The pod template for the DS init and main container
  podTemplate:
    image: gcr.io/forgeops-public/ds:7.2-dev
    imagePullPolicy: IfNotPresent
    # The resources assigned to each DS pod
    resources:
      requests:
        memory: 900Mi
        cpu: 250m
      limits:
        memory: 1024Mi
    # Secrets that hold certificates and keys for directory server operation.
    # Secrets can be generated by cert-manager or other tools that generate
    # PEM based secrets of type kubernetes.io/tls.
    certificates:
      # the tls.key in this secret is the private key used for encrypting DS data.
      # BACK THIS UP!! If you lose this secret your data will be lost forever.
      masterSecretName: ds-master-keypair
      # Used for SSL connections between ds instances - for replication, etc.
      sslSecretName: ds-ssl-keypair
      # The truststore is taken from the ca.crt in the secret. In most cases
      # you can use the same ca trust pem in the ssl secret above.
      truststoreSecretName: ds-ssl-keypair
    # Optional configmap with scripts to be used in place of the default scripts.
    scriptConfigMapName: ds-script-config

    # The volume spec for the DS data. This is the same as the Kubernetes PVC volume spec.
    volumeClaimSpec:
      storageClassName: fast
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 512Mi
    # Optional: If dataSource is provided *AND* the PVC does not yet exist, the directory PVCs will be
    # initialized from the contents of the snapshot. They will NOT be initialized from the setup script.
    # If the PVC exists this setting has no effect.
    #
    # The name "$(latest)" is reserved. It signifies to the operator
    # to find the name of the latest auto snapshot that was taken . If you
    # have a custom volume snapshot (perhaps you manually created a snapshot), use that name instead.
    # If no automatic $(latest) snapshot can be found, the operator will create a new volume.
    # dataSource:
    #   name: "$(latest)"
    #   kind: VolumeSnapshot
    #   apiGroup: snapshot.storage.k8s.io

    #
    # Class to use for any snapshots
    volumeSnapshotClassName: ds-snapshot-class
    # Use this pass env vars to the DS pod.
    env:
    - name: "DS_TEST"
      value: "FOO"
    # The example below overrides the default bootstrap for a GCP Multicluster deployment for a "ds-cts" instance
    # This is an example of customizing the bootstrap behavior. This can be used for 
    # Multi-cluster deployments on GCP MCS, AWS Kube-dns, cloud dns, etc. 
    # See the README in forgeops/ds/ds. Understand what you are doing here before making changes!
    # This is NOT required for single cluster deployments.
    # 
    # The example below specifies one bootstrap server in this cluster (eu) and a second
    # bootstrap server in the us cluster. The dns names below must be fully resolvable 
    # in all clusters. The namespaces must be identical in all clusters.
    #
    # - name: DS_BOOTSTRAP_REPLICATION_SERVERS
    #   value: "ds-cts-0.ds-cts.mynamespace.svc.eu,ds-cts-0.ds-cts.mynamespace.svc.us"
    # Group id says we are in the eu region.
    # - name: DS_GROUP_ID
    #   value: "eu"

  # Optional - Configures the operator to automatically take snapshots
  # You must be using a CSI volume driver.
  snapshots:
    enabled: true
    # Take a snapshot every N minutes. The number here is VERY low for testing.
    # On a production cluster, you should set this to something higher (30 minutes).
    periodMinutes: 10
    # Keep this many snapshots. Older snapshots will be deleted
    snapshotsRetained: 3
    

  ### Passwords ###
  # Passwords: maps DS accounts to new or existing secrets.
  # The operator supports "bring your own secrets". For example, a secret may have been generated by another operator such as secret agent.
  # A secret that does not set create: true is assumed to be supplied externally. External secrets will not be deleted by the operator
  passwords:
    # uid=admin and uid=monitor are required account secrets.
    uid=admin:
      secretName: ds-passwords
      key: dirmanager.pw
    uid=monitor:
      secretName: ds-passwords
      key: monitor.pw
    # Set the service account passwords
    # We also set the CTS account - in case the user wants to use a single ds instance
    uid=openam_cts,ou=admins,ou=famrecords,ou=openam-session,ou=tokens:
      secretName: ds-env-secrets
      key: AM_STORES_CTS_PASSWORD
    uid=am-identity-bind-account,ou=admins,ou=identities:
      secretName: ds-env-secrets
      key: AM_STORES_USER_PASSWORD
    uid=am-config,ou=admins,ou=am-config:
      secretName: ds-env-secrets
      key: AM_STORES_APPLICATION_PASSWORD