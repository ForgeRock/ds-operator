# Sample DirectoryService deployment
apiVersion: directory.forgerock.io/v1alpha1
kind: DirectoryService
metadata:
  name: ds-idrepo
  labels:
    app.kubernetes.io/name: ds
    app.kubernetes.io/part-of: forgerock
spec:
  image: gcr.io/forgeops-public/ds:7.2-dev
  imagePullPolicy: IfNotPresent

  # The number of DS servers in the topology
  replicas: 1
  # The resources assigned to each DS pod
  resources:
    requests:
      memory: 900Mi
      cpu: 250m
    limits:
      memory: 1024Mi

# The volume spec for the DS data. This is the same as the Kubernetes PVC volume spec.
  volumeClaimSpec:
    storageClassName: fast
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 512Mi
    # Optional: If dataSource is provided, the directory PVCs will be
    # initialized from the contents of the snapshot. They will NOT be initialized from the "prototype" backends.
    # The name "$(latest)" is reserved. It signifies to the operator
    # to find the name of the latest auto snapshot that was taken . If you
    # have a custom volume snapshot (perhaps you manually created a snapshot), use that name instead.
    # If no automatic $(latest) snapshot can be found, the operator will create a new volume.
    # dataSource:
    #   name: "$(latest)"
    #   kind: VolumeSnapshot
    #   apiGroup: snapshot.storage.k8s.io

  # Optional - Configures the operator to automatically take snapshots
  # You must be using a CSI volume driver.
  snapshots:
    enabled: true
    # Take a snapshot every N minutes. The number here is VERY low for testing.
    # On a production cluster, you should set this to something higher (30 minutes).
    periodMinutes: 10
    # Keep this many snapshots. Older snapshots will be deleted
    snapshotsRetained: 3
    # This defaults to ds-snapshot-class if not specified
    volumeSnapshotClassName: ds-snapshot-class

  ### Passwords ###
  # Passwords: maps DS accounts to new or existing secrets.
  # The operator supports "bring your own secrets". For example, a secret may have been generated by another operator such as secret agent.
  # A secret that does not set create: true is assumed to be supplied externally. External secrets will not be deleted by the operator
  passwords:
    # uid=admin and uid=monitor are required account secrets.
    uid=admin:
      secretName: ds-passwords
      key: dirmanager.pw
    uid=monitor:
      secretName: ds-passwords
      key: monitor.pw
    # Set the service account passwords
    # We also set the CTS account - in case the user wants to use a single ds instance
    uid=openam_cts,ou=admins,ou=famrecords,ou=openam-session,ou=tokens:
      secretName: ds-env-secrets
      key: AM_STORES_CTS_PASSWORD
    uid=am-identity-bind-account,ou=admins,ou=identities:
      secretName: ds-env-secrets
      key: AM_STORES_USER_PASSWORD
    uid=am-config,ou=admins,ou=am-config:
      secretName: ds-env-secrets
      key: AM_STORES_APPLICATION_PASSWORD

  # Secrets that hold certificates and keys for directory server operation.
  # Secrets can be generated by cert-manager or other tools that generate
  # PEM based secrets of type kubernetes.io/tls.
  certificates:
    # the tls.key in this secret is the private key used for encrypting DS data.
    # BACK THIS UP!! If you lose this secret your data will be lost forever.
    masterSecretName: ds-master-keypair
    # Used for SSL connections between ds instances - for replication, etc.
    sslSecretName: ds-ssl-keypair
    # The truststore is taken from the ca.crt in the secret. In most cases
    # you can use the same ca trust pem in the ssl secret above.
    truststoreSecretName: ds-ssl-keypair


  scriptConfigMapName: ds-script-config


  #### Multi-cluster ####
  # multiCluster:
    ## clusterTopology and clusterIdentifier are required in multi-cluster solutions make DS unique across clusters.
    ## clusterTopology - list of identifiers for the each cluster used to determine the bootstrap servers.
    ## Bootstrap servers example output in a multi-region MCS environment:
    ## Bootstrap replication server(s) : ds-idrepo-0.eu.ds-idrepo-eu.prod.svc.clusterset.local:8989,ds-idrepo-0.us.ds-idrepo.prod.svc.clusterset.local:8989
    # clusterTopology: "eu,us"
    ## clusterIdentifier - current clusters identifier.  Must match 1 of the identifiers in clusterTopology
    # clusterIdentifier: "eu"
    ## Enable MCS(Googles Multi-cluster Services).  Not required for kubedns solution
    # mcsEnabled: true
