---
apiVersion: secret-agent.secrets.forgerock.io/v1alpha1
kind: SecretAgentConfiguration
metadata:
  name: forgerock-sac

# CRD settings
spec:
  appConfig:
    createKubernetesObjects: true
    # secretsManagerPrefix: "benchmark"

    # A cloud provider's secret manager is the source of truth.
    # If secrets don't exist, they are generated and stored in the manager.
    secretsManager: none # none, AWS, Azure, or GCP

    ## When running on GCP, specify a ProjectID
    # gcpProjectID: engineering-devops

    # When running on AWS, specify a region
    # awsRegion: example-region

    # When running on Azure, specify a vault
    # azureVaultName: secret-agent-test

    # credentials for cloud provider
    # credentialsSecretName: cloud-storage-credentials

  # Start of secrets array

  # In this YAML file, the "secrets" key defines Kubernetes secret objects managed by the
  # operator for this configuration.
  #
  # The secrets key's value is an array of maps.
  #
  # Each map has two keys:
  #
  #  name - the name of a Kubernetes secret
  #  keys - a map of one or more secret data values that comprises the Kubernetes secret
  #
  # The data values in the keys map are themselves maps; they have the following keys:
  #
  #  name - the data key - the name of the a piece of data within the Kubernetes secret
  #  type - literal, ca, truststore, password, keyPair, keytool, pkcs12, jceks, or ssh
  #  spec - a map that contains the data value; format varies depending on type

  secrets:

  # example of binary data

  # platform-ca secret: a root certificate for signing keys

  - name: platform-ca
    keys:

      # When a type of `ca` is set, the names of the keys will be `{name}.pem` and
      # `{name}-private.pem`.

      - name: ca
        type: ca
        spec:
          # These are the values for the certificate's distinguished name.
          # They must be supported by https://golang.org/pkg/crypto/x509/pkix/#Name.
          # Note _SerialNumber_, r_Names_, and _ExtraNames_  aren't supported.
          # Serial Number is generated by the operator.
          distinguishedName:
            commonName: "Deployment key"
            organization:
              - "ForgeRock.com"


  # DS secrets

  # ds-passwords secret

  - name: ds-passwords
    keys:

      - name: dirmanager.pw
        # A password type is a random human readable string.
        type: password
        spec:
          # Default length 32
          length: 32

      - name: monitor.pw
        type: literal
        spec:
          # A simple string literal
          value: password

  # ds secret: encryption certificates

  - name: ds
    keys:

    # The X.509 certificate key pair stored in the secret `ds` as `ssl-key-pair.pem`
    # `ssl-key-pair-private.pem`
    - name: ssl-key-pair
      type: keyPair
      spec:
        # Algorithm used to create key pair
        algorithm: ECDSAWithSHA256
        # Same object type as `type: ca`
        distinguishedName:
          commonName: ds
          organization:
            - "ForgeRock.com"
        # List of additional DNS names - the names of the DNS entries in kubernetes when DS pods run
        sans:
        - "*.ds"
        - "*.ds-idrepo"
        - "*.ds-cts"
        # Key is signed by the referenced certificate only one path can be referenced
        # signing with a secret agent ca is the same  path as truststoreImportPaths
        #
        # `platform-ca` should have data keys of `ca.pem` and `ca-private.pem` if the
        # certificates not managed by secret agent
        signedWithPath: "platform-ca/ca"

    - name: master-key-pair
      type: keyPair
      spec:
        algorithm: SHA256WithRSA
        distinguishedName:
          commonName: "Master key"
          organization:
            - "ForgeRock.com"
        selfSigned: true
        # Any negative duration produces a certificate keypair that has an
        # unusable valid period to prevent use by PKI clients
        #
        # this is a certificate used as a shared key pair between DS instances
        duration: "-72h"

    - name: keystore.pin
      type: password
      spec:
        length: 32
      # keystore used by DS

    - name: keystore
      # Java Keystore type
      type: keytool
      spec:
        # Supported types: JCEKS, PKCS12
        storeType: pkcs12
        storePassPath: ds/keystore.pin # exact path of {secret object}/{key name}
        keyPassPath: ds/keystore.pin
        # aliases in the keystore
        keytoolAliases:
            # Name of the alias
          - name: ca-cert
            # Name of keytool subcommand
            cmd: importcert
            # import the public key of the platform ca as ca-cert
            sourcePath: "platform-ca/ca"
          - name: ssl-key-pair
            # Importing a keypair to keytool is a keystore of the public and private key
            cmd: importkeystore
            sourcePath: "ds/ssl-key-pair"
            # If the sourcePath is a certificate `isKeyPair` must be set to true
            # the sourcePath could also be another keytool keystore with the same alias name
            isKeyPair: true
          - name: master-key
            cmd: importkeystore
            sourcePath: "ds/master-key-pair"
            isKeyPair: true

  # ds-env-secrets secret

  - name: ds-env-secrets
    keys:
      - name: AM_STORES_APPLICATION_PASSWORD
        type: password
        spec:
          length: 32
      - name: AM_STORES_CTS_PASSWORD
        type: password
        spec:
          length: 32
      - name: AM_STORES_USER_PASSWORD
        type: password
        spec:
          length: 32

