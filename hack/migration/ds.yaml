# Sample DirectoryService Deployment Custom Resource
apiVersion: directory.forgerock.io/v1alpha1
kind: DirectoryService
metadata:
  # Directory hostnames will be ds-idrepo-0, id-repo-1, id-repo-2, etc.
  name: ds-idrepo
  labels:
    app.kubernetes.io/name: ds
    app.kubernetes.io/part-of: forgerock
spec:
  # The number of DS servers in the topology.
  # Change this value at runtime using the command:
  #    kubectl scale directoryservice ds-idrepo --replicas=3
  replicas: 1

  # The pod template for the Directory Service init and main containers.
  # The same pod template is also used for the DirectoryBackup and DirectoryRestore resources.
  podTemplate:
    # The image must support the entry point hooks defined in the forgeops docker/ds/ds Dockerfile.
    # See https://github.com/ForgeRock/forgeops/tree/master/docker/ds/ds
    image: us-docker.pkg.dev/forgeops-public/images/ds:7.2-dev
    imagePullPolicy: IfNotPresent
    # The resources assigned to each DS pod
    resources:
      requests:
        memory: 2000Mi
        cpu: 2000m
      limits:
        memory: 2000Mi
    # Kubernetes secrets holding the certificates and keys for directory server operation.
    # Secrets can be generated by cert-manager or other tools that generate
    # PEM based secrets of type kubernetes.io/tls.
    secrets:
      # the tls.key in this secret is the private key used for encrypting DS data.
      # BACK THIS UP!! If you lose this secret your data will be lost forever.
      masterSecretName: ds-master-keypair
      # tls.key and tls.crt used for SSL connections between ds instances - for replication, etc.
      sslSecretName: ds-ssl-keypair
      # The truststore is taken from the ca.crt in the tls secret. In most cases
      # you can use the same CA trust pem in the ssl secret above. If you are using
      # cert-manager, it includes the CA trust pem along with the private/public key pair.
      truststoreSecretName: ds-ssl-keypair
    #
    # Optional configmap holding scripts to override the default scripts.
    # Scripts that can be overridden are: restore, backup, and post-init
    # These should NOT have the .sh extension, and should be executable scripts.
    # You can add additional scripts in the configmap for adhoc commands that can be run
    # using kubectl exec.
    # Scripts are mounted on /opt/opendj/scripts
    # scriptConfigMapName: ds-script-config

    # The volume spec for the directory data. This is the same as the Kubernetes PVC volume spec.
    volumeClaimSpec:
      storageClassName: fast
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
    # Optional: If the volume dataSource is provided *AND* the PVC does not yet exist, the directory PVCs will be
    # initialized from the contents of the snapshot. They will NOT be initialized from the setup script.
    #
    # If the PVC already exists this setting has no effect.
    #
    # The name "$(latest)" is reserved. It signifies to the operator
    # to find the name of the latest auto snapshot that was taken . If you
    # have a custom volume snapshot (perhaps you manually created a snapshot), use that name instead.
    # If no automatic $(latest) snapshot can be found, the operator will create a new empty volume.
    # dataSource:
    #   name: "$(latest)"
    #   kind: VolumeSnapshot
    #   apiGroup: snapshot.storage.k8s.io

    #
    # Class to use for any snapshots.
    volumeSnapshotClassName: ds-snapshot-class
    # Optional: The Kubernetes service account to use for the DS pod/containers.
    # serviceAccountName: default

    # Use this to set any additional env vars on the DS pods.
    env:
    #
    #
    # 1. Set DS_BOOTSTRAP_REPLICATION_SERVERS to include the existing ds server that we want to replicate from.
    # The example below is for the migration scenario where we to migrate data from ds-idrepo-0 in the default namespace.
    # See  README.md#migration

    - name: DS_BOOTSTRAP_REPLICATION_SERVERS
      value: "ds-idrepo-0.ds-idrepo.default.svc.cluster.local:8989,ds-idrepo-0.ds-idrepo.ds.svc.cluster.local:8989"

    # We need to set the group ID so that we get a server id that is unique/different than the primary
    - name: DS_GROUP_ID
      value: "ds"

    ### End Pod Template ###



  # Optional - Configures the operator to automatically take snapshots
  # You must be using a CSI volume driver. CSI drivers are now the default on GCP clusters.
  # For more information on CSI drivers, see: https://kubernetes.io/docs/concepts/storage/volumes/#csi
  snapshots:
    enabled: true
    # Take a snapshot every N minutes. The number here is low for testing.
    # On a production cluster, you should set this to something higher (20-30 minutes).
    # Note that GCP snapshots are quota limited to 6 per hour per disk.
    periodMinutes: 10
    # Keep this many snapshots. Older snapshots will be deleted
    snapshotsRetained: 3

  passwords:
      # uid=admin and uid=monitor are required account secrets.
    uid=admin:
      secretName: ds-passwords
      key: dirmanager.pw
    uid=monitor:
      secretName: ds-passwords
      key: monitor.pw
