
# This is a sample Job template to copy the contents of the /backup pvc to GCS
# Workload identity: 
#
# 

apiVersion: batch/v1
kind: Job
metadata:
  name: ds-cp-pvc-to-gcs
spec:
  # This will clean up the job after completion.
  # This feature entered beta in 1.20 and may not be available on all releases.
  ttlSecondsAfterFinished: 100
  template:
    spec:
      restartPolicy: Never

      initContainers:
      # Run the export as an init container. We can kubectl wait for completion in scripts
    
      ##### This container copies the backed up files on the ds-backup PVC to an archival medium ####
      # This example uses gsutil to copy the files to cloud storage. You can replace this
      # example with your archival container.
      # GKE workload identity is used authorize writing to GCS.  See the GKE docs.
      - name: gsutil
        image: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -x
            #gcloud auth activate-service-account --key-file /etc/gcloud/gcloud.json
            #gcloud auth configure-docker
            gsutil -o "GSUtil:state_dir=/tmp/gsutil" -m rsync -r /backup gs://forgeops/ds-backup

        volumeMounts:
        - name: ds-backup
          mountPath: /backup
        - name: config
          mountPath: /.config
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

      containers:
      # Example of a main container. This does nothing but sleep
      # If you want to exec into the container set the sleep value below
      - name: pause
        image: busybox
        command: ["/bin/sh"]
        args: ["-c", "sleep 1"]
        volumeMounts:
        - mountPath: /backup/
          name: ds-backup

      securityContext:
        fsGroup: 0
        runAsUser: 11111
      serviceAccount: ds-backup


      volumes:
      - name: ds-backup
        persistentVolumeClaim:
          claimName: ds-backup
      - name: config
        emptyDir:
            {}
