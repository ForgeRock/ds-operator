apiVersion: directory.forgerock.io/v1alpha1
kind: DirectoryService
metadata:
  name: ds-idrepo
  labels:
    app.kubernetes.io/name: ds
    app.kubernetes.io/testcase: ds-from-restore
    app.kubernetes.io/part-of: forgerock
spec:
  image: gcr.io/forgeops-public/ds:dev
  replicas: 2
  resources:
    requests:
      memory: 900Mi
      cpu: 250m
    limits:
      memory: 1024Mi
  volumeClaimSpec:
    storageClassName: fast
    accessModes: [ "ReadWriteOnce" ]
    resources:
      requests:
        storage: 2Gi
    dataSource:
      name: ds-restore
      kind: VolumeSnapshot
      apiGroup: snapshot.storage.k8s.io
  snapshots:
    enabled: false
    periodMinutes: 2
    snapshotsRetained: 2
    volumeSnapshotClassName: ds-snapshot-class
  passwords:
    uid=admin:
      secretName: ds-passwords
      key: dirmanager.pw
    uid=monitor:
      secretName: ds-passwords
      key: monitor.pw
    uid=openam_cts,ou=admins,ou=famrecords,ou=openam-session,ou=tokens:
      secretName: ds-env-secrets
      key: AM_STORES_CTS_PASSWORD
    uid=am-identity-bind-account,ou=admins,ou=identities:
      secretName: ds-env-secrets
      key: AM_STORES_USER_PASSWORD
    uid=am-config,ou=admins,ou=am-config:
      secretName: ds-env-secrets
      key: AM_STORES_APPLICATION_PASSWORD
  certificates:
    # the tls.key in this secret is the private key used for encrypting DS data.
    # BACK THIS UP!! If you lose this secret your data will be lost forever.
    masterSecretName: ds-master-keypair
    # Used for SSL connections between ds instances - for replication, etc.
    sslSecretName: ds-ssl-keypair
    # The truststore is taken from the ca.crt in the secret. In most cases
    # you can use the same ca trust pem in the ssl secret above.
    truststoreSecretName: ds-ssl-keypair
