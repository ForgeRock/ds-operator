
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: directoryservices.directory.forgerock.io
spec:
  group: directory.forgerock.io
  names:
    kind: DirectoryService
    listKind: DirectoryServiceList
    plural: directoryservices
    shortNames:
    - ds
    singular: directoryservice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DirectoryService is the Schema for the directoryservices API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DirectoryServiceSpec defines the desired state of DirectoryService
            properties:
              backup:
                description: Backup
                properties:
                  cron:
                    type: string
                  enabled:
                    type: boolean
                  path:
                    type: string
                  purgeCron:
                    default: 40 0 * * *
                    type: string
                  purgeHours:
                    default: 2400
                    format: int32
                    type: integer
                  secretName:
                    default: cloud-storage-credentials
                    type: string
                required:
                - cron
                - enabled
                - path
                type: object
              image:
                description: Docker Image for the directory server.
                type: string
              keystores:
                description: Keystore references
                properties:
                  keyStoreSecretName:
                    default: ds
                    description: The name of a secret containing the keystore
                    type: string
                  trustStoreSecretName:
                    type: string
                required:
                - keyStoreSecretName
                type: object
              passwords:
                additionalProperties:
                  description: DirectoryPasswords is a reference to account secrets
                    that contain passwords for the directory. The operator can set
                    the passwords for accounts such as the uid=admin, uid=monitor
                    and service accounts such as uid=idm-admin,ou=admins
                  properties:
                    create:
                      description: Create a random secret if true. Otherwise assumes
                        the secret already exists
                      type: boolean
                    key:
                      description: The key within the secret
                      type: string
                    secretName:
                      description: The name of a secret
                      type: string
                  required:
                  - key
                  - secretName
                  type: object
                description: The account secrets. The key is the DN of the secret
                  (example, uid=admin)
                type: object
              replicas:
                default: 1
                description: Replicas is the number of directory server instances
                  to create
                format: int32
                maximum: 8
                type: integer
              resources:
                description: Type of ds instance. Allowed - cts or idrepo? If allow
                  setting the Image, we don't need a type? DSType string `json:"dsType,omitempty"`
                properties:
                  limits:
                    additionalProperties:
                      type: string
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                  requests:
                    additionalProperties:
                      type: string
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    type: object
                type: object
              restore:
                description: Restore
                properties:
                  enabled:
                    type: boolean
                  path:
                    type: string
                  secretName:
                    default: cloud-storage-credentials
                    type: string
                required:
                - enabled
                - path
                type: object
              storage:
                default: 100Gi
                type: string
              storageClassName:
                default: standard
                type: string
            required:
            - image
            - passwords
            - replicas
            - storage
            - storageClassName
            type: object
          status:
            description: DirectoryServiceStatus defines the observed state of DirectoryService
            properties:
              active:
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs.  1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage.  2.
                    Invalid usage help.  It is impossible to add specific help for
                    individual usage.  In most embedded usages, there are particular     restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted".     Those cannot be well described
                    when embedded.  3. Inconsistent validation.  Because the usages
                    are different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen.  4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity     during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple     and the version of the actual
                    struct is irrelevant.  5. We cannot easily change it.  Because
                    this type is embedded in many locations, updates to this type     will
                    affect numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              backupStatus:
                items:
                  description: DirectoryBackupStatus provides the status of the backup
                  properties:
                    endTime:
                      type: string
                    startTime:
                      description: note DS returns these as string values. For status
                        is ok
                      type: string
                    status:
                      type: string
                  required:
                  - endTime
                  - startTime
                  - status
                  type: object
                type: array
              currentReplicas:
                format: int32
                type: integer
              serverMessage:
                type: string
              serviceAccountPasswordsUpdatedTime:
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      scale:
        specReplicasPath: .spec.replicas
        statusReplicasPath: .status.currentReplicas
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
